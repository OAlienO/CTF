#! /usr/bin/env python
import sys
from Crypto.Util.number import *

p = 7237456167886933603568077763971797677494691417445164032592531089821123206479404800400730100448529593205165329900151494378335606435433475569645550769375953 # getPrime(512)
q = 9413990956126794450660841219295747443750755757642781043774200098122203676657860461477107991892670397092278800335157858366667353762506430638217778299846883 # getPrime(512)
n = p * q
r = (p - 1) * (q - 1)
e = 0x10001
d = inverse(e, r)
m = bytes_to_long(b'.-.---.---.-.-.--..--...-.-.-.-.-.-.-..-.--.-....-.-.--.-.-.-.-..-.-.-.-.--.-.-.-..-.-.-.-.-.-.....--.--.---.-.-.-..--.-.-.--.-.')
c = pow(m, e, n)

# n = 68133346909851679853551514167372067450301556117993136896713910006794887315754524637730284862547187739221324310423713986344631568547244716990409427299661814772053118718463577650022907717960370743542331968113453359945632747473670114337783168598502452776526082218171506766320993358956312909968983308065362204499
# c = 30114219239892667628290486736731427494873556258670848619310327407555453255306715021419934979916840285122928282506417561332451273155435522830679498343641802083420365324068696406435962456213173734561060791206969088044307942904150014014900798465442902164285751234210102609882759019190172878817794058147653170084

def oracle(c, x=1):
    res = bin(pow(c, d * x, n)).count('1') & 0x1
    return int(res)


while True:
    try:
        c = [int(x) for x in sys.stdin.readline().split(" ")]
        if len(c) == 1:
            sys.stdout.write("%d\n" % oracle(c[0]))
        else:
            sys.stdout.write("%d\n" % oracle(c[0], x=c[1]))
    except Exception as e:
        sys.stdout.write(e)
        sys.stdout.write("Nope.\n")

    sys.stdout.flush()

# e = 0x10001
# c = 32028315366572316530941187471534975579021238700122793819215559206747120150118490538115208229905399038122261293920013020124257186389163654867911967899754432511568776857320594304655042217535057811315461534790485879395513727264354857833013662037825295017832478478693519684813603327210332854320793948700855663229
